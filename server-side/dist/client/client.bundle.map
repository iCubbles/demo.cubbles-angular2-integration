{"version":3,"sources":["webpack:///./src async","webpack:///./src/client.ts","webpack:///./src/__2.1.1.workaround.ts","webpack:///./src/app/app.browser.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/demo1/demo1.component.ts","webpack:///./src/app/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/demo1/demo1.component.html","webpack:///vertx (ignored)"],"names":[],"mappings":"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","file":"client.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 330;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 330\n// module chunks = 0","/**\n * the polyfills must be the first thing imported\n */\nimport './polyfills.ts';\nimport './__2.1.1.workaround.ts'; // temporary until 2.1.1 things are patched in Core\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { platformUniversalDynamic } from 'angular2-universal';\nimport { AppModule } from './app/app.browser.module';\n\n/**\n * enable prod mode for production environments\n */\nif (environment.production) {\n  enableProdMode();\n}\n\nconst platformRef = platformUniversalDynamic();\n\nplatformRef.bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.ts","/*\n * THIS IS TEMPORARY TO PATCH 2.1.1+ Core bugs\n */\n\n/* tslint:disable */\nlet __compiler__: any = require('@angular/compiler');\nimport { __platform_browser_private__ } from '@angular/platform-browser';\nvar __core_private__: any = require('@angular/core');\nlet patch: Boolean = false;\n\nif (!__core_private__.hasOwnProperty('ViewUtils')) {\n    patch = true;\n    __core_private__.ViewUtils = __core_private__.view_utils;\n}\n\nif (!__compiler__.__compiler_private__) {\n    patch = true;\n    (__compiler__).__compiler_private__ = {\n        SelectorMatcher: __compiler__.SelectorMatcher,\n        CssSelector: __compiler__.CssSelector\n    }\n}\n\nvar __universal__: any = require('angular2-platform-node/__private_imports__');\nif (patch) {\n    __universal__.ViewUtils = __core_private__.view_utils;\n    __universal__.CssSelector = __compiler__.CssSelector\n    __universal__.SelectorMatcher = __compiler__.SelectorMatcher\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/__2.1.1.workaround.ts","/**\r\n * This file and `main.node.ts` are identical, at the moment(!)\r\n * By splitting these, you're able to create logic, imports, etc that are \"Platform\" specific.\r\n * If you want your code to be completely Universal and don't need that\r\n * You can also just have 1 file, that is imported into both\r\n * client.ts and server.ts\r\n */\r\n\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { UniversalModule } from 'angular2-universal';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './index';\nimport { Demo1Component } from './demo1/demo1.component';\r\n// import { RouterModule } from '@angular/router';\r\n// import { appRoutes } from './app/app.routing';\r\n\r\n/**\r\n * Top-level NgModule \"container\"\r\n */\r\n@NgModule({\r\n  /** Root App Component */\r\n  bootstrap: [AppComponent],\r\n  /** Our Components */\r\n  declarations: [AppComponent, Demo1Component],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  imports: [\r\n    /**\r\n     * NOTE: Needs to be your first import (!)\r\n     * BrowserModule, HttpModule, and JsonpModule are included\r\n     */\r\n    UniversalModule,\r\n    FormsModule\r\n    /**\r\n     * using routes\r\n     */\r\n    // RouterModule.forRoot(appRoutes)\r\n  ]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.browser.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo1',\n  templateUrl: './demo1.component.html'\n})\nexport class Demo1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo1/demo1.component.ts","export * from './app.component';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ung build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\n\nimport 'angular2-universal-polyfills';\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 598\n// module chunks = 0","module.exports = \"<header class=\\\"\\\">\\r\\n    <nav class=\\\"blue darken-2\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"nav-wrapper\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"brand-logo\\\">Cubbles meets Angular 2</a>\\r\\n            </div>\\r\\n            <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\r\\n                <li><a href=\\\"https://github.com/iCubbles/demo.cubbles-angular2-integration\\\" target=\\\"_blank\\\">Github</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n\\r\\n<app-demo1></app-demo1>\\r\\n\\r\\n<footer class=\\\"page-footer  blue darken-2\\\">\\r\\n    <div class=\\\"container center\\\">\\r\\n        <p class=\\\"grey-text text-lighten-4\\\">Get in touch with Cubbles: Visit us on <a class=\\\"grey-text text-lighten-2\\\" href=\\\"https://cubbles.github.io\\\" target=\\\"_blank\\\">github</a>.</p>\\r\\n    </div>\\r\\n    <div class=\\\"footer-copyright\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            &copy; 2017 incowia GmbH\\r\\n            <a class=\\\"grey-text text-lighten-2 right\\\" href=\\\"https://cubbles.github.io\\\" target=\\\"_blank\\\">Cubbles Platform</a>\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 599\n// module chunks = 0","module.exports = \"<main>\\r\\n  <div class=\\\"container\\\">\\r\\n    <article>\\r\\n      <h3>Demo 1</h3>\\r\\n      <p class=\\\"flow-text\\\">This demo shows how to easily integrate Cubbles into an existing Angular 2 Application. The project is build with the\\r\\n        angular-cli and Cubbles Runtime Extension 2.1.0 (<a href=\\\"https://github.com/cubbles/cubx.core.rte/tree/master/webpackages/cubx.core.rte\\\"\\r\\n          target=\\\"_blank\\\">source on github</a>)\\r\\n      </p>\\r\\n    </article>\\r\\n\\r\\n    <div class=\\\"divider\\\"></div>\\r\\n\\r\\n    <article>\\r\\n      <p>\\r\\n        The simplest way to add a cubbles component is to add <code>CUSTOM_ELEMENTS_SCHEMA</code> to the <code>@NgModule</code>,\\r\\n        allowing custom HTML Element.\\r\\n      </p>\\r\\n    </article>\\r\\n\\r\\n    <div class=\\\"divider\\\"></div>\\r\\n\\r\\n    <article>\\r\\n      <federal-state-elections cubx-webpackage-id=\\\"com.incowia.demo.elections@0.1.0-SNAPSHOT\\\"></federal-state-elections>\\r\\n    </article>\\r\\n\\r\\n    <article>\\r\\n      <ul class=\\\"collapsible\\\" data-collapsible=\\\"expandable\\\">\\r\\n        <li>\\r\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"medium material-icons\\\">code</i>HTML: index.html</div>\\r\\n          <div class=\\\"collapsible-body\\\">\\r\\n            <pre><code>\\r\\n&lt;head&gt;\\r\\n    ...\\r\\n  <!-- Include Cubbles -->\\r\\n  &lt;script src=\\\"https://cubbles.world/sandbox/cubx.core.rte@2.1.0/webcomponents-lite/webcomponents-lite.js\\\"&gt;&lt;/script&gt;\\r\\n  &lt;script src=\\\"https://cubbles.world/sandbox/cubx.core.rte@2.1.0/crc-loader/js/main.js\\\" data-crcinit-loadcif=\\\"true\\\">&lt;/script&gt;\\r\\n    ...\\r\\n&lt;/head&gt;\\r\\n\\r\\n&lt;html&gt;\\r\\n  \\r\\n  ...\\r\\n&lt;/html&gt;</code></pre>\\r\\n          </div>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"medium material-icons\\\">code</i>HTML: Component</div>\\r\\n          <div class=\\\"collapsible-body\\\">\\r\\n            <pre><code>\\r\\n      &lt;federal-state-elections cubx-webpackage-id=&quot;com.incowia.demo.elections@0.1.0-SNAPSHOT&quot;&gt;&lt;/federal-state-elections&gt;</code></pre>\\r\\n          </div>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"medium material-icons\\\">code</i>TypeScript Component</div>\\r\\n          <div class=\\\"collapsible-body\\\">\\r\\n            <pre><code class=\\\"javascript\\\">\\r\\n              import {{ '{' }} Component, OnInit } from '@angular/core';\\r\\n\\r\\n@Component({{ '{' }}\\r\\n  selector: 'app-demo1',\\r\\n  templateUrl: './demo1.component.html'\\r\\n})\\r\\nexport class Demo1Component implements OnInit {{ '{' }}\\r\\n\\r\\n  constructor() {{ '{' }} }\\r\\n\\r\\n  ngOnInit() {{ '{' }}\\r\\n    // build custom event for starting bootstrap of CIF (here, use the deprecated way that also works in IE)\\r\\n    var event = document.createEvent('CustomEvent');\\r\\n    event.initCustomEvent('CubxComponentLinked', true, true, {{ '{' }}});\\r\\n\\r\\n    // dispatch this 'CubxComponentLinked' event\\r\\n    document.dispatchEvent(event);\\r\\n  }\\r\\n\\r\\n}</code></pre>\\r\\n          </div>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"medium material-icons\\\">code</i>Angular Module</div>\\r\\n          <div class=\\\"collapsible-body\\\">\\r\\n            <pre><code class=\\\"javascript\\\">import {{ '{' }} NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\\r\\n\\r\\n...\\r\\n\\r\\n\\r\\n@NgModule({{ '{' }}\\r\\n\\r\\n  ...\\r\\n  \\r\\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\\r\\n  \\r\\n  ...\\r\\n})\\r\\nexport class AppModule {{ '{' }} }\\r\\n</code></pre>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </article>\\r\\n  </div>\\r\\n</main>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/demo1/demo1.component.html\n// module id = 600\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// vertx (ignored)\n// module id = 616\n// module chunks = 0"],"sourceRoot":""}