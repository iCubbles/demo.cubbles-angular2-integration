{"version":3,"sources":["webpack:///./src async","webpack:///./src/client.ts","webpack:///./src/__2.1.1.workaround.ts","webpack:///./src/app/app.browser.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///vertx (ignored)"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;;;;;ACHuB;AACS;AACc;AACU;AACK;AACT;AAEpD;;GAEG;AACH,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,IAAM,WAAW,GAAG,mGAAwB,EAAE,CAAC;AAE/C,WAAW,CAAC,eAAe,CAAC,0EAAS,CAAC,CAAC;;;;;;;;ACnBvC;;GAEG;AAEH,oBAAoB;AACpB,IAAI,YAAY,GAAQ,mBAAO,CAAC,EAAmB,CAAC,CAAC;AAErD,IAAI,gBAAgB,GAAQ,mBAAO,CAAC,CAAe,CAAC,CAAC;AACrD,IAAI,KAAK,GAAY,KAAK,CAAC;AAE3B,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAChD,KAAK,GAAG,IAAI,CAAC;IACb,gBAAgB,CAAC,SAAS,GAAG,gBAAgB,CAAC,UAAU,CAAC;AAC7D,CAAC;AAED,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACrC,KAAK,GAAG,IAAI,CAAC;IACb,CAAC,YAAY,CAAC,CAAC,oBAAoB,GAAG;QAClC,eAAe,EAAE,YAAY,CAAC,eAAe;QAC7C,WAAW,EAAE,YAAY,CAAC,WAAW;KACxC;AACL,CAAC;AAED,IAAI,aAAa,GAAQ,mBAAO,CAAC,GAA4C,CAAC,CAAC;AAC/E,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACR,aAAa,CAAC,SAAS,GAAG,gBAAgB,CAAC,UAAU,CAAC;IACtD,aAAa,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW;IACpD,aAAa,CAAC,eAAe,GAAG,YAAY,CAAC,eAAe;AAChE,CAAC;;;;;;;;;;;;;;AC5BD;AAAA;;;;;;GAMG;;;;;;;;;;AAEqC;AACY;AACR;AACN;AACtC,kDAAkD;AAClD,iDAAiD;AAEjD;;GAEG;AAmBH;IAAA;IAEA,CAAC;IApBD;QAAC,8EAAQ,CAAC;YACR,yBAAyB;YACzB,SAAS,EAAE,CAAE,4DAAY,CAAE;YAC3B,qBAAqB;YACrB,YAAY,EAAE,CAAE,4DAAY,CAAE;YAC9B,OAAO,EAAE;gBACP;;;mBAGG;gBACH,mEAAe;gBACf,mEAAW;aAKZ;SACF,CAAC;;iBAAA;IAGF,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACtCwC;AAOzC;IAAA;QACE,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAPD;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;SACnC,CAAC;;oBAAA;IAGF,mBAAC;AAAD,CAAC;;;;;;;;;;;ACT+B;;;;;;;;;ACAhC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,0EAA0E;AAC1E,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPF;AAAA;AAAA,wEAAwE;AACxE,8DAA8D;AAEzB;AACV;AACA;AACE;AACC;AACE;AACL;AACF;AACE;AACF;AACC;AACC;AACH;AACA;AACI;AAEA;;;;;;;;ACnB5B,mB;;;;;;;ACAA,4BAA4B,OAAO,U;;;;;;;ACAnC,e","file":"client.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 330;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 330\n// module chunks = 0","/**\n * the polyfills must be the first thing imported\n */\nimport './polyfills.ts';\nimport './__2.1.1.workaround.ts'; // temporary until 2.1.1 things are patched in Core\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { platformUniversalDynamic } from 'angular2-universal';\nimport { AppModule } from './app/app.browser.module';\n\n/**\n * enable prod mode for production environments\n */\nif (environment.production) {\n  enableProdMode();\n}\n\nconst platformRef = platformUniversalDynamic();\n\nplatformRef.bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.ts","/*\n * THIS IS TEMPORARY TO PATCH 2.1.1+ Core bugs\n */\n\n/* tslint:disable */\nlet __compiler__: any = require('@angular/compiler');\nimport { __platform_browser_private__ } from '@angular/platform-browser';\nvar __core_private__: any = require('@angular/core');\nlet patch: Boolean = false;\n\nif (!__core_private__.hasOwnProperty('ViewUtils')) {\n    patch = true;\n    __core_private__.ViewUtils = __core_private__.view_utils;\n}\n\nif (!__compiler__.__compiler_private__) {\n    patch = true;\n    (__compiler__).__compiler_private__ = {\n        SelectorMatcher: __compiler__.SelectorMatcher,\n        CssSelector: __compiler__.CssSelector\n    }\n}\n\nvar __universal__: any = require('angular2-platform-node/__private_imports__');\nif (patch) {\n    __universal__.ViewUtils = __core_private__.view_utils;\n    __universal__.CssSelector = __compiler__.CssSelector\n    __universal__.SelectorMatcher = __compiler__.SelectorMatcher\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/__2.1.1.workaround.ts","/**\n * This file and `main.node.ts` are identical, at the moment(!)\n * By splitting these, you're able to create logic, imports, etc that are \"Platform\" specific.\n * If you want your code to be completely Universal and don't need that\n * You can also just have 1 file, that is imported into both\n * client.ts and server.ts\n */\n\nimport { NgModule } from '@angular/core';\nimport { UniversalModule } from 'angular2-universal';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './index';\n// import { RouterModule } from '@angular/router';\n// import { appRoutes } from './app/app.routing';\n\n/**\n * Top-level NgModule \"container\"\n */\n@NgModule({\n  /** Root App Component */\n  bootstrap: [ AppComponent ],\n  /** Our Components */\n  declarations: [ AppComponent ],\n  imports: [\n    /**\n     * NOTE: Needs to be your first import (!)\n     * BrowserModule, HttpModule, and JsonpModule are included\n     */\n    UniversalModule,\n    FormsModule\n    /**\n     * using routes\n     */\n    // RouterModule.forRoot(appRoutes)\n  ]\n})\nexport class AppModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.browser.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export * from './app.component';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ung build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\n\nimport 'angular2-universal-polyfills';\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 597\n// module chunks = 0","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 598\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// vertx (ignored)\n// module id = 614\n// module chunks = 0"],"sourceRoot":""}